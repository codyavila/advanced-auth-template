{"ast":null,"code":"var _jsxFileName = \"/Users/codysanders/Projects/auth-template/client/src/components/screens/ForgotPasswordScreen/ForgotPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport axios from 'axios';\nimport './ForgotPasswordScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgotPasswordScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  const forgotPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const {\n        data\n      } = await axios.post('/api/auth/forgotpassword', {\n        email\n      }, config);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.response.data.error);\n      setEmail('');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgotpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: forgotPasswordHandler,\n      className: \"forgotpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"forgotpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"forgotpassword-screen__subtext\",\n          children: \"Please enter the email address you register your account with. We will send you reset password confirmation to this email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          placeholder: \"Email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPasswordScreen, \"f+x1U/zg+SfpPYFQL6xKcfhtfg4=\");\n\n_c = ForgotPasswordScreen;\nexport default ForgotPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordScreen\");","map":{"version":3,"names":["useState","axios","ForgotPasswordScreen","email","setEmail","error","setError","success","setSuccess","forgotPasswordHandler","e","preventDefault","config","header","data","post","response","setTimeout","target","value"],"sources":["/Users/codysanders/Projects/auth-template/client/src/components/screens/ForgotPasswordScreen/ForgotPasswordScreen.js"],"sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\nimport './ForgotPasswordScreen.css'\n\nconst ForgotPasswordScreen = () => {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState('')\n\n  const forgotPasswordHandler = async (e) => {\n    e.preventDefault()\n\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    try {\n      const { data } = await axios.post(\n        '/api/auth/forgotpassword',\n        { email },\n        config\n      )\n\n      setSuccess(data.data)\n    } catch (error) {\n      setError(error.response.data.error)\n      setEmail('')\n      setTimeout(() => {\n        setError('')\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className='forgotpassword-screen'>\n      <form\n        onSubmit={forgotPasswordHandler}\n        className='forgotpassword-screen__form'>\n        <h3 className='forgotpassword-screen__title'>Forgot Password</h3>\n        {error && <span className='error-message'>{error}</span>}\n        {success && <span className='success-message'>{success}</span>}\n        <div className='form-group'>\n          <p className='forgotpassword-screen__subtext'>\n            Please enter the email address you register your account with. We\n            will send you reset password confirmation to this email\n          </p>\n          <label htmlFor='email'>Email:</label>\n          <input\n            type='email'\n            required\n            id='email'\n            placeholder='Email address'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Send Email\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ForgotPasswordScreen\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;EAAA;;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;EAEA,MAAMS,qBAAqB,GAAG,MAAOC,CAAP,IAAa;IACzCA,CAAC,CAACC,cAAF;IAEA,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAE;QACN,gBAAgB;MADV;IADK,CAAf;;IAMA,IAAI;MACF,MAAM;QAAEC;MAAF,IAAW,MAAMb,KAAK,CAACc,IAAN,CACrB,0BADqB,EAErB;QAAEZ;MAAF,CAFqB,EAGrBS,MAHqB,CAAvB;MAMAJ,UAAU,CAACM,IAAI,CAACA,IAAN,CAAV;IACD,CARD,CAQE,OAAOT,KAAP,EAAc;MACdC,QAAQ,CAACD,KAAK,CAACW,QAAN,CAAeF,IAAf,CAAoBT,KAArB,CAAR;MACAD,QAAQ,CAAC,EAAD,CAAR;MACAa,UAAU,CAAC,MAAM;QACfX,QAAQ,CAAC,EAAD,CAAR;MACD,CAFS,EAEP,IAFO,CAAV;IAGD;EACF,CAxBD;;EA0BA,oBACE;IAAK,SAAS,EAAC,uBAAf;IAAA,uBACE;MACE,QAAQ,EAAEG,qBADZ;MAEE,SAAS,EAAC,6BAFZ;MAAA,wBAGE;QAAI,SAAS,EAAC,8BAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,EAIGJ,KAAK,iBAAI;QAAM,SAAS,EAAC,eAAhB;QAAA,UAAiCA;MAAjC;QAAA;QAAA;QAAA;MAAA,QAJZ,EAKGE,OAAO,iBAAI;QAAM,SAAS,EAAC,iBAAhB;QAAA,UAAmCA;MAAnC;QAAA;QAAA;QAAA;MAAA,QALd,eAME;QAAK,SAAS,EAAC,YAAf;QAAA,wBACE;UAAG,SAAS,EAAC,gCAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAKE;UAAO,OAAO,EAAC,OAAf;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UACE,IAAI,EAAC,OADP;UAEE,QAAQ,MAFV;UAGE,EAAE,EAAC,OAHL;UAIE,WAAW,EAAC,eAJd;UAKE,KAAK,EAAEJ,KALT;UAME,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV;QAN3B;UAAA;UAAA;UAAA;QAAA,QANF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAqBE;QAAQ,IAAI,EAAC,QAAb;QAAsB,SAAS,EAAC,iBAAhC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CA5DD;;GAAMjB,oB;;KAAAA,oB;AA8DN,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}