{"ast":null,"code":"var _jsxFileName = \"/Users/codysanders/Projects/auth-template/client/src/components/screens/ResetPasswordScreen/ResetPasswordScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './resetPasswordScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPasswordScreen = () => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const id = useParams();\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword('');\n      setConfirmPassword('');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n      return setError(\"Passwords don't match\");\n    }\n\n    try {\n      const {\n        data\n      } = await axios.put(`/api/auth/resetpassword/${id.resetToken}`, {\n        password\n      }, config);\n      setSuccess(data.data);\n    } catch (error) {\n      setError(error.message);\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetpassword-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      className: \"resetpassword-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"resetpassword-screen__title\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"success-message\",\n        children: [success, \" \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter new password\",\n          autoComplete: \"true\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"true\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPasswordScreen, \"DhuVOVp33SvudClZA4lWQuph0BE=\", false, function () {\n  return [useParams];\n});\n\n_c = ResetPasswordScreen;\nexport default ResetPasswordScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPasswordScreen\");","map":{"version":3,"names":["useState","Link","useParams","axios","ResetPasswordScreen","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","id","resetPasswordHandler","e","preventDefault","config","header","setTimeout","data","put","resetToken","message","target","value"],"sources":["/Users/codysanders/Projects/auth-template/client/src/components/screens/ResetPasswordScreen/ResetPasswordScreen.js"],"sourcesContent":["import { useState } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport axios from 'axios'\n\nimport './resetPasswordScreen.css'\n\nconst ResetPasswordScreen = () => {\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState('')\n\n const id = useParams()\n\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault()\n\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    if (password !== confirmPassword) {\n      setPassword('')\n      setConfirmPassword('')\n      setTimeout(() => {\n        setError('')\n      }, 5000)\n      return setError(\"Passwords don't match\")\n    }\n\n    try {\n      const { data } = await axios.put(\n        `/api/auth/resetpassword/${id.resetToken}`,\n        {\n          password\n        },\n        config\n      )\n\n      setSuccess(data.data)\n    } catch (error) {\n      setError(error.message)\n      setTimeout(() => {\n        setError('')\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className='resetpassword-screen'>\n      <form\n        onSubmit={resetPasswordHandler}\n        className='resetpassword-screen__form'>\n        <h3 className='resetpassword-screen__title'>Forgot Password</h3>\n        {error && <span className='error-message'>{error} </span>}\n        {success && (\n          <span className='success-message'>\n            {success} <Link to='/login'>Login</Link>\n          </span>\n        )}\n        <div className='form-group'>\n          <label htmlFor='password'>New Password:</label>\n          <input\n            type='password'\n            required\n            id='password'\n            placeholder='Enter new password'\n            autoComplete='true'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='confirmpassword'>Confirm New Password:</label>\n          <input\n            type='password'\n            required\n            id='confirmpassword'\n            placeholder='Confirm new password'\n            autoComplete='true'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Reset Password\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default ResetPasswordScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}